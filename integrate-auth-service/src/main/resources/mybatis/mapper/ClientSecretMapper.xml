<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bmsoft.auth.dao.mapper.ClientSecretMapper">
  <resultMap id="BaseResultMap" type="com.bmsoft.auth.entity.ClientSecret">
    <result column="client_id" property="clientId" jdbcType="VARCHAR"/>
    <result column="client_secret" property="clientSecret" jdbcType="VARCHAR"/>
    <result column="tenant_id" property="tenantId" typeHandler="UUIDTypeHandler"/>
    <result column="user_id" property="userId" typeHandler="UUIDTypeHandler"/>
    <result column="purpose" property="purpose" jdbcType="VARCHAR"/>
    <result column="status" property="status" jdbcType="VARCHAR"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="create_by" property="createBy" typeHandler="UUIDTypeHandler"/>
    <result column="update_by" property="updateBy" typeHandler="UUIDTypeHandler"/>
  </resultMap>
  <sql id="Base_Columns">
    client_id, client_secret, tenant_id, status, purpose, update_time, create_time, create_by, update_by
  </sql>

  <insert id="insert" parameterType="com.bmsoft.auth.entity.ClientSecret">
    INSERT INTO oauth_client_details (client_id, client_secret, tenant_id,
    status, purpose, create_time
    )
    VALUES (#{clientId,jdbcType=VARCHAR}, #{clientSecret,jdbcType=VARCHAR},
    #{tenantId,javaType=UUID,jdbcType=OTHER,typeHandler=UUIDTypeHandler},
    #{status,jdbcType=VARCHAR}, #{purpose, jdbcType=VARCHAR}, current_timestamp
    )
  </insert>

  <select id="selectByParams" parameterType="Map" resultMap="BaseResultMap">
    SELECT
    c.*
    FROM oauth_client_details c
    <where>
      <if test="clientId != null">
        c.client_id = #{clientId, jdbcType=VARCHAR}
      </if>
      <if test="tenantId != null">
        AND c.tenant_id = #{tenantId, typeHandler=UUIDTypeHandler}
      </if>
      <if test="clientSecret != null">
        AND c.client_secret = #{clientSecret, jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        AND c.status = #{status, jdbcType=VARCHAR}
      </if>
    </where>
    ORDER BY c.status
  </select>

  <select id="getScope" resultType="java.lang.String">
    SELECT
    c.scope
    FROM oauth_client_details c
    <where>
      <if test="clientId != null">
        c.client_id = #{clientId, jdbcType=VARCHAR}
      </if>
      <if test="clientSecret != null">
        AND c.client_secret = #{clientSecret, jdbcType=VARCHAR}
      </if>
    </where>
    ORDER BY c.status
  </select>

  <update id="updateByParams" parameterType="Map">
    UPDATE oauth_client_details
    <set>
      <if test="status != null">
        status = #{status, jdbcType=VARCHAR},
      </if>
      <if test="clientSecret != null">
        client_secret = #{clientSecret, jdbcType=VARCHAR},
      </if>
      <if test="purpose != null">
        purpose = #{purpose, jdbcType=VARCHAR},
      </if>
      update_time = current_timestamp
    </set>
    <where>
      client_id = #{clientId, jdbcType=VARCHAR}
    </where>
  </update>

  <update id="updateStatus" parameterType="Map">
    UPDATE oauth_client_details
    SET
    status = #{status, jdbcType=VARCHAR}
    <where>
      <if test="tenantId != null">
        tenant_id = #{tenantId, typeHandler=UUIDTypeHandler}
      </if>
      <if test="clientId != null">
        client_id = #{clientId, jdbcType=VARCHAR}
      </if>
    </where>
  </update>
</mapper>
